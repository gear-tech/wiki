"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[5841],{3905:function(e,t,n){n.d(t,{Zo:function(){return u},kt:function(){return m}});var r=n(7294);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function a(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);t&&(r=r.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,r)}return n}function i(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?a(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):a(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function l(e,t){if(null==e)return{};var n,r,o=function(e,t){if(null==e)return{};var n,r,o={},a=Object.keys(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||(o[n]=e[n]);return o}(e,t);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);for(r=0;r<a.length;r++)n=a[r],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(o[n]=e[n])}return o}var d=r.createContext({}),c=function(e){var t=r.useContext(d),n=t;return e&&(n="function"==typeof e?e(t):i(i({},t),e)),n},u=function(e){var t=c(e.components);return r.createElement(d.Provider,{value:t},e.children)},p={inlineCode:"code",wrapper:function(e){var t=e.children;return r.createElement(r.Fragment,{},t)}},s=r.forwardRef((function(e,t){var n=e.components,o=e.mdxType,a=e.originalType,d=e.parentName,u=l(e,["components","mdxType","originalType","parentName"]),s=c(n),m=o,g=s["".concat(d,".").concat(m)]||s[m]||p[m]||a;return n?r.createElement(g,i(i({ref:t},u),{},{components:n})):r.createElement(g,i({ref:t},u))}));function m(e,t){var n=arguments,o=t&&t.mdxType;if("string"==typeof e||o){var a=n.length,i=new Array(a);i[0]=s;var l={};for(var d in t)hasOwnProperty.call(t,d)&&(l[d]=t[d]);l.originalType=e,l.mdxType="string"==typeof e?e:o,i[1]=l;for(var c=2;c<a;c++)i[c]=n[c];return r.createElement.apply(null,i)}return r.createElement.apply(null,n)}s.displayName="MDXCreateElement"},2114:function(e,t,n){n.r(t),n.d(t,{assets:function(){return u},contentTitle:function(){return d},default:function(){return m},frontMatter:function(){return l},metadata:function(){return c},toc:function(){return p}});var r=n(7462),o=n(3366),a=(n(7294),n(3905)),i=["components"],l={sidebar_label:"Dev Net Mode",sidebar_position:5},d="Running Gear node in Dev Net mode",c={unversionedId:"node/dev-net",id:"node/dev-net",title:"Running Gear node in Dev Net mode",description:"Dev net is useful for development and debugging of your smart contracts. You can upload your program directly to a local node, send messages to a program and validate the program's logic.",source:"@site/docs/node/dev-net.md",sourceDirName:"node",slug:"/node/dev-net",permalink:"/node/dev-net",draft:!1,editUrl:"https://github.com/gear-tech/wiki/edit/master/docs/node/dev-net.md",tags:[],version:"current",sidebarPosition:5,frontMatter:{sidebar_label:"Dev Net Mode",sidebar_position:5},sidebar:"tutorialSidebar",previous:{title:"Backup and Restore",permalink:"/node/backup-restore"},next:{title:"Multi-Node Mode",permalink:"/node/multi-node"}},u={},p=[],s={toc:p};function m(e){var t=e.components,n=(0,o.Z)(e,i);return(0,a.kt)("wrapper",(0,r.Z)({},s,n,{components:t,mdxType:"MDXLayout"}),(0,a.kt)("h1",{id:"running-gear-node-in-dev-net-mode"},"Running Gear node in Dev Net mode"),(0,a.kt)("p",null,"Dev net is useful for development and debugging of your smart contracts. You can upload your program directly to a local node, send messages to a program and validate the program's logic."),(0,a.kt)("p",null,"To run a Gear node in a dev net mode:"),(0,a.kt)("ol",null,(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Compile or download nightly build for your operating system as described in ",(0,a.kt)("a",{parentName:"p",href:"https://wiki.gear-tech.io/node/setting-up"},"https://wiki.gear-tech.io/node/setting-up"),".")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Run the node in dev mode:"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./gear-node --dev --tmp\n")),(0,a.kt)("ol",{start:3},(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"Follow to ",(0,a.kt)("a",{parentName:"p",href:"https://idea.gear-tech.io/"},"https://idea.gear-tech.io/")," and connect to a local dev node. Click network selection via the left top button, choose Development -> Local node and click Switch button. Use Idea portal for sending messages, reading program's state etc.")),(0,a.kt)("li",{parentName:"ol"},(0,a.kt)("p",{parentName:"li"},"To purge any existing dev chain state, use:"))),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"./gear-node purge-chain --dev\n")),(0,a.kt)("ol",{start:5},(0,a.kt)("li",{parentName:"ol"},"To start a dev chain with detailed logging, use:")),(0,a.kt)("pre",null,(0,a.kt)("code",{parentName:"pre",className:"language-bash"},"RUST_LOG=debug RUST_BACKTRACE=1 ./gear-node -lruntime=debug --dev\n")))}m.isMDXComponent=!0}}]);