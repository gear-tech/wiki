"use strict";(self.webpackChunkdocs_website=self.webpackChunkdocs_website||[]).push([[53],{1109:function(e){e.exports=JSON.parse('{"pluginId":"default","version":"current","label":"Next","banner":null,"badge":false,"className":"docs-version-current","isLast":true,"docsSidebars":{"tutorialSidebar":[{"type":"link","label":"Welcome!","href":"/","docId":"intro"},{"type":"category","label":"Intro to Gear","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Glossary","href":"/gear/glossary","docId":"gear/glossary"},{"type":"link","label":"Substrate","href":"/gear/introduction","docId":"gear/introduction"},{"type":"category","label":"Gear Network State","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"State Components","href":"/gear/gear-state/state","docId":"gear/gear-state/state"},{"type":"link","label":"State Transition","href":"/gear/gear-state/state-transition","docId":"gear/gear-state/state-transition"}]},{"type":"link","label":"Actor Model","href":"/gear/actor-model","docId":"gear/actor-model"},{"type":"link","label":"Memory Parallelism","href":"/gear/memory-parallelism","docId":"gear/memory-parallelism"},{"type":"link","label":"WebAssembly (WASM)","href":"/gear/WASM","docId":"gear/WASM"}]},{"type":"category","label":"Ecosystem","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Polkadot","href":"/ecosystem/polkadot","docId":"ecosystem/polkadot"},{"type":"link","label":"Substrate","href":"/ecosystem/substrate","docId":"ecosystem/substrate"}]},{"type":"link","label":"Getting Started","href":"/getting-started-in-5-minutes","docId":"getting-started-in-5-minutes"},{"type":"category","label":"Gear IDEA","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"IDEA Overview","href":"/idea/idea-overview","docId":"idea/idea-overview"},{"type":"link","label":"Online IDE","href":"/idea/online-ide","docId":"idea/online-ide"},{"type":"category","label":"Account","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create Account","href":"/idea/account/create-account","docId":"idea/account/create-account"},{"type":"link","label":"SS58 account format","href":"/idea/account/ss58","docId":"idea/account/ss58"},{"type":"link","label":"Receive GRB","href":"/idea/account/gear-bonus","docId":"idea/account/gear-bonus"}]}]},{"type":"category","label":"Gear Node","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Setting Up","href":"/node/setting-up","docId":"node/setting-up"},{"type":"link","label":"Node as a Service","href":"/node/node-as-service","docId":"node/node-as-service"},{"type":"link","label":"Node Monitoring","href":"/node/telemetry","docId":"node/telemetry"},{"type":"link","label":"Backup and Restore","href":"/node/backup-restore","docId":"node/backup-restore"},{"type":"link","label":"Dev Net Mode","href":"/node/dev-net","docId":"node/dev-net"},{"type":"link","label":"Multi-Node Mode","href":"/node/multi-node","docId":"node/multi-node"},{"type":"link","label":"Node FAQ","href":"/node/node-faq","docId":"node/node-faq"},{"type":"link","label":"Troubleshooting","href":"/node/troubleshooting","docId":"node/troubleshooting"}]},{"type":"category","label":"Developing Smart Contracts","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Program State","href":"/developing-contracts/gear-program","docId":"developing-contracts/gear-program"},{"type":"link","label":"Message Format","href":"/developing-contracts/messaging","docId":"developing-contracts/messaging"},{"type":"link","label":"Interaction Between Programs","href":"/developing-contracts/interactions-between-programs","docId":"developing-contracts/interactions-between-programs"},{"type":"link","label":"Program Testing","href":"/developing-contracts/testing","docId":"developing-contracts/testing"},{"type":"link","label":"Upload Program","href":"/developing-contracts/deploy","docId":"developing-contracts/deploy"}]},{"type":"category","label":"Smart Contract Examples","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Prerequisites","href":"/examples/prerequisites","docId":"examples/prerequisites"},{"type":"link","label":"PING-PONG","href":"/examples/ping","docId":"examples/ping"},{"type":"link","label":"gFT (ERC-20)","href":"/examples/gft-20","docId":"examples/gft-20"},{"type":"link","label":"gNFT (ERC-721)","href":"/examples/gnft-721","docId":"examples/gnft-721"},{"type":"link","label":"gMT (ERC-1155)","href":"/examples/gmt-1155","docId":"examples/gmt-1155"},{"type":"link","label":"Gear Feeds","href":"/examples/feeds","docId":"examples/feeds"},{"type":"link","label":"DAO","href":"/examples/DAO","docId":"examples/DAO"},{"type":"link","label":"Escrow","href":"/examples/escrow","docId":"examples/escrow"},{"type":"link","label":"Lottery","href":"/examples/lottery","docId":"examples/lottery"},{"type":"link","label":"Dutch Auction","href":"/examples/dutch-auction","docId":"examples/dutch-auction"},{"type":"link","label":"Supply chain","href":"/examples/supply-chain","docId":"examples/supply-chain"},{"type":"link","label":"Multisig Wallet","href":"/examples/multisig-wallet","docId":"examples/multisig-wallet"},{"type":"link","label":"Concert (FT to NFT transition)","href":"/examples/concert","docId":"examples/concert"},{"type":"link","label":"NFT Marketplace","href":"/examples/marketplace","docId":"examples/marketplace"},{"type":"link","label":"RMRK NFT standard","href":"/examples/rmrk","docId":"examples/rmrk"},{"type":"link","label":"Staking","href":"/examples/staking","docId":"examples/staking"},{"type":"link","label":"OnChain NFT","href":"/examples/onchain-nft","docId":"examples/onchain-nft"},{"type":"link","label":"Crowdsale(ICO)","href":"/examples/crowdsale-ico","docId":"examples/crowdsale-ico"}]},{"type":"category","label":"API for interacting with node","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Getting started","href":"/api/getting-started","docId":"api/getting-started"},{"type":"link","label":"Keyring","href":"/api/keyring","docId":"api/keyring"},{"type":"link","label":"Calculate gas","href":"/api/calculate-gas","docId":"api/calculate-gas"},{"type":"link","label":"Upload Program","href":"/api/upload-program","docId":"api/upload-program"},{"type":"link","label":"Submit Code","href":"/api/submit-code","docId":"api/submit-code"},{"type":"link","label":"Send Message","href":"/api/send-message","docId":"api/send-message"},{"type":"link","label":"Read State","href":"/api/read-state","docId":"api/read-state"},{"type":"link","label":"Metadata & Type Creation","href":"/api/metadata-type-creation","docId":"api/metadata-type-creation"},{"type":"link","label":"Mailbox","href":"/api/mailbox","docId":"api/mailbox"},{"type":"link","label":"Events","href":"/api/events","docId":"api/events"},{"type":"link","label":"Cookbook","href":"/api/extra-queries","docId":"api/extra-queries"},{"type":"category","label":"Gear-JS tools","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Create-Gear-App","href":"/api/tooling/create-gear-app","docId":"api/tooling/create-gear-app"},{"type":"link","label":"Meta CLI","href":"/api/tooling/meta-cli","docId":"api/tooling/meta-cli"}]}]},{"type":"category","label":"General topics","collapsible":true,"collapsed":true,"items":[{"type":"link","label":"Web3","href":"/general/web3","docId":"general/web3"},{"type":"link","label":"dApps","href":"/general/dApps","docId":"general/dApps"},{"type":"link","label":"Smart Contracts","href":"/general/contracts","docId":"general/contracts"},{"type":"link","label":"DeFi","href":"/general/defi","docId":"general/defi"},{"type":"link","label":"NFT","href":"/general/nft","docId":"general/nft"},{"type":"link","label":"DAO","href":"/general/dao","docId":"general/dao"}]}]},"docs":{"api/calculate-gas":{"id":"api/calculate-gas","title":"Calculate gas","description":"Gear nodes charge gas fees for all network operations, whether that be executing a program\u2019s code or processing a message. This gas is paid by the initiator of these actions.","sidebar":"tutorialSidebar"},"api/events":{"id":"api/events","title":"Events","description":"Events are generated for certain operations during execution. The following sections describe events that are part of the default Gear runtime.","sidebar":"tutorialSidebar"},"api/extra-queries":{"id":"api/extra-queries","title":"Cookbook","description":"Here is collected a set of useful code snippets in a question-answer format:","sidebar":"tutorialSidebar"},"api/getting-started":{"id":"api/getting-started","title":"Getting started","description":"Gear-JS API","sidebar":"tutorialSidebar"},"api/keyring":{"id":"api/keyring","title":"Keyring","description":"Keyring enables you to manage your key pair (account) to perform a wide range of operations, including signing, verifying and encrypting/decrypting. The SecretKey is never exposed to the outside.","sidebar":"tutorialSidebar"},"api/mailbox":{"id":"api/mailbox","title":"Mailbox","description":"The mailbox is used to store messages sent from the program to a user.","sidebar":"tutorialSidebar"},"api/metadata-type-creation":{"id":"api/metadata-type-creation","title":"Basics & Metadata / Type creation","description":"In the context of Gear programs, metadata facilitates the interaction between the client side (javascript) and the program (Rust). Metadata is a kind of interface map that can help to identify and order a set of bytes into an understandable structure and indicates what the function it is intended for. Metadata is stored in a separate *.meta.wasm file and, in the case of decoding, it will contain a common structure:","sidebar":"tutorialSidebar"},"api/read-state":{"id":"api/read-state","title":"Read State","description":"The following query is used to read the state of the program:","sidebar":"tutorialSidebar"},"api/send-message":{"id":"api/send-message","title":"Send Message","description":"This example shows how to send messages to the program:","sidebar":"tutorialSidebar"},"api/submit-code":{"id":"api/submit-code","title":"Submit Code","description":"If you need to load the program code into the chain without initialization, take a look at the following example:","sidebar":"tutorialSidebar"},"api/tooling/create-gear-app":{"id":"api/tooling/create-gear-app","title":"Create-Gear-App","description":"\\"Create-Gear-App\\" is a ready-made application template with well-thought-out infrastructure for quickly launching applications on Gear blockchain. You can learn more here: Github link","sidebar":"tutorialSidebar"},"api/tooling/meta-cli":{"id":"api/tooling/meta-cli","title":"Gear Meta CLI","description":"CLI tool to encode/decode payloads and work with .meta.wasm files.","sidebar":"tutorialSidebar"},"api/upload-program":{"id":"api/upload-program","title":"Upload Program","description":"A smart contract compiled to Wasm can be uploaded as a program to the Gear network. During uploading it is initialized in the network to be able to send and receive messages with other actors in the network (programs and users).","sidebar":"tutorialSidebar"},"developing-contracts/deploy":{"id":"developing-contracts/deploy","title":"Deploy smart contracts","description":"Following the principles of Actor model for communication, creating a program is just one of the specific types of transactions that contain a WASM file as a payload.","sidebar":"tutorialSidebar"},"developing-contracts/gear-program":{"id":"developing-contracts/gear-program","title":"Gear program state","description":"The program is the main unit of the Gear component. Program code is stored as an immutable WASM blob. Each program has a fixed amount of memory which persists between messagehandling (so-called static area).","sidebar":"tutorialSidebar"},"developing-contracts/interactions-between-programs":{"id":"developing-contracts/interactions-between-programs","title":"Cross-program communication","description":"This article explains how several programs (smart contracts) can communicate with each other by sending messages.","sidebar":"tutorialSidebar"},"developing-contracts/messaging":{"id":"developing-contracts/messaging","title":"Message communication format","description":"Interaction with each program takes place by messaging.","sidebar":"tutorialSidebar"},"developing-contracts/testing":{"id":"developing-contracts/testing","title":"How to test a program","description":"Gear gtest library is the recommended option for the programs (smart contracts) logic testing. This article describes how to test programs using gtest.","sidebar":"tutorialSidebar"},"ecosystem/polkadot":{"id":"ecosystem/polkadot","title":"Polkadot network","description":"Polkadot is a blockchain protocol that connects specific blockchains into one single multinetwork and provides a high level of interoperability and security.","sidebar":"tutorialSidebar"},"ecosystem/substrate":{"id":"ecosystem/substrate","title":"Substrate","description":"Substrate is a modular framework that enables the creation of unique blockchains by composing custom or pre-built components.","sidebar":"tutorialSidebar"},"examples/concert":{"id":"examples/concert","title":"Concert Contract (FT to NFT transition)","description":"Introduction","sidebar":"tutorialSidebar"},"examples/crowdsale-ico":{"id":"examples/crowdsale-ico","title":"Crowdsale (ICO)","description":"Introduction","sidebar":"tutorialSidebar"},"examples/DAO":{"id":"examples/DAO","title":"Decentralized autonomous organization","description":"Introduction","sidebar":"tutorialSidebar"},"examples/dutch-auction":{"id":"examples/dutch-auction","title":"Dutch auction","description":"Introduction","sidebar":"tutorialSidebar"},"examples/escrow":{"id":"examples/escrow","title":"What is an escrow?","description":"An escrow is a special wallet to which some assets (e.g. money or stocks) are deposited and stored until certain conditions are met. In terms of smart contracts, an escrow is a wallet that is stored on a blockchain and, like a regular escrow, can receive some assets (e.g. a cryptocurrency or tokens) from one user and, when certain conditions are met, send them to another.","sidebar":"tutorialSidebar"},"examples/feeds":{"id":"examples/feeds","title":"Introduction","description":"In order to introduce our rapidly growing community to the platform developed by Gear, we\'ve developed a dApplication in order to showcase some of the features that can be implemented using our smart contracts. Specifically, this contract aims to build a platform simillar to Twitter: each user can have their own \\"feed\\", \\"feeds\\" can be subscribed to and the landing page contains global & personal \\"feeds\\".","sidebar":"tutorialSidebar"},"examples/gft-20":{"id":"examples/gft-20","title":"Gear Fungible Token","description":"What is ERC-20?","sidebar":"tutorialSidebar"},"examples/gmt-1155":{"id":"examples/gmt-1155","title":"Gear Multiple Token (gMT)","description":"Introduction","sidebar":"tutorialSidebar"},"examples/gnft-721":{"id":"examples/gnft-721","title":"Gear Non-Fungible Token","description":"Introduction","sidebar":"tutorialSidebar"},"examples/lottery":{"id":"examples/lottery","title":"Lottery","description":"Introduction","sidebar":"tutorialSidebar"},"examples/marketplace":{"id":"examples/marketplace","title":"NFT Marketplace","description":"Introduction","sidebar":"tutorialSidebar"},"examples/multisig-wallet":{"id":"examples/multisig-wallet","title":"Multisig Wallet","description":"Introduction","sidebar":"tutorialSidebar"},"examples/onchain-nft":{"id":"examples/onchain-nft","title":"On-chain gNFT assets","description":"Introduction","sidebar":"tutorialSidebar"},"examples/ping":{"id":"examples/ping","title":"PING-PONG","description":"Gear is very easy to write code for!","sidebar":"tutorialSidebar"},"examples/prerequisites":{"id":"examples/prerequisites","title":"Gear Examples","description":"Gear provides a set of examples that can be used for your familiarization with writing programs on Gear or become the basis for your own dApp//github.com/gear-dapps.","sidebar":"tutorialSidebar"},"examples/rmrk":{"id":"examples/rmrk","title":"RMRK NFT standard","description":"Introduction","sidebar":"tutorialSidebar"},"examples/staking":{"id":"examples/staking","title":"Staking","description":"Introduction","sidebar":"tutorialSidebar"},"examples/supply-chain":{"id":"examples/supply-chain","title":"Supply chain","description":"Introduction","sidebar":"tutorialSidebar"},"gear/actor-model":{"id":"gear/actor-model","title":"Actor Model","description":"In concurrent computing systems, \u201cmessage-passing communication\u201d means that programs communicate by exchanging messages. This has its advantages over \u201cshared memory communication\u201d as message passing is easier to understand than shared memory concurrency as it\u2019s more robust and has better performance characteristics.","sidebar":"tutorialSidebar"},"gear/gear-state/state":{"id":"gear/gear-state/state","title":"State components","description":"As any blockchain system, Gear maintains distributed state. Runtime code compiled to WebAssembly becomes part of the blockchain\u2019s storage state.","sidebar":"tutorialSidebar"},"gear/gear-state/state-transition":{"id":"gear/gear-state/state-transition","title":"State transition","description":"Each system follows the rules according to which the state of the system evolves. As the network processes new input data, the state is advanced according to state transition rules. This input data is packed in granular pieces of information called transactions.","sidebar":"tutorialSidebar"},"gear/glossary":{"id":"gear/glossary","title":"Glossary","description":"Account","sidebar":"tutorialSidebar"},"gear/introduction":{"id":"gear/introduction","title":"Substrate","description":"As Gear uses a Substrate framework, the creation of different blockchains for specific applications is simplified. Substrate provides extensive functionality out-of-the-box and allows developers to focus on creating a custom engine on top of the protocol. This covers the most desired requirements for enterprise-ready decentralized projects.","sidebar":"tutorialSidebar"},"gear/memory-parallelism":{"id":"gear/memory-parallelism","title":"Memory parallelism","description":"Individual isolated memory space per program allows parallelization of message processing on a Gear node. Number of parallel processing streams equals the number of CPU cores. Each stream processes messages intended for a defined set of programs. It relates to messages sent from other programs or from outside (user\u2019s transactions).","sidebar":"tutorialSidebar"},"gear/WASM":{"id":"gear/WASM","title":"What is WebAssembly (WASM)","description":"WebAssembly is a way to run applications in programming languages other than JavaScript as web pages. Essentially, WASM is just a virtual machine that runs on all modern browsers, but whereas in the past you were required to use JavaScript to run code in a web page, WASM makes it possible to run code in browsers with programming languages other than JavaScript.","sidebar":"tutorialSidebar"},"general/contracts":{"id":"general/contracts","title":"What are Smart Contracts?","description":"Smart contracts are transactional computer programs that can execute the terms of an agreement automatically without the need for intervention. They were first proposed by Nick Szabo in the early \u201890s, but due to technological constraints they couldn\u2019t function properly. It wasn\u2019t until improvements were made to fundamental blockchain technology that application of smart contracts became possible.","sidebar":"tutorialSidebar"},"general/dao":{"id":"general/dao","title":"What are DAOs?","description":"DAOs are an effective and safe way to work with like-minded people around the globe. Essentially, they\u2019re safe ways to collaborate with strangers and commit funds to a specific cause. You can think of DAOs as magic internet organizations that\u2019re collectively owned and managed by its members.","sidebar":"tutorialSidebar"},"general/dApps":{"id":"general/dApps","title":"What are dApps?","description":"Decentralized Applications, or dApps, are applications that offer similar functionality to traditional applications but the main difference is that they are run on decentralized peer-to-peer networks, such as blockchains. Decentralized applications offer the services that make up the Web3 revolution.","sidebar":"tutorialSidebar"},"general/defi":{"id":"general/defi","title":"What is DeFi?","description":"Decentralized finance is a collection of financial services that are an alternative to the current financial system.","sidebar":"tutorialSidebar"},"general/nft":{"id":"general/nft","title":"What are NFTs?","description":"A Non-Fungible Token (NFT) is a unique type of cryptographic token that enables the tokenization of unique units of data to be stored on a blockchain.","sidebar":"tutorialSidebar"},"general/web3":{"id":"general/web3","title":"What is Web3?","description":"Web 3.0 is a new iteration of the internet that\u2019s powered by new technologies like artificial intelligence, machine learning and most importantly, blockchain technology.","sidebar":"tutorialSidebar"},"getting-started-in-5-minutes":{"id":"getting-started-in-5-minutes","title":"Getting Started","description":"This guide provides a general overview of running smart contracts on the Gear network. It guides you through how to write a smart contract, compile it to WASM and deploy it to the Gear network.","sidebar":"tutorialSidebar"},"idea/account/create-account":{"id":"idea/account/create-account","title":"How to create a Substrate account","description":"Key information and security","sidebar":"tutorialSidebar"},"idea/account/gear-bonus":{"id":"idea/account/gear-bonus","title":"What is GRB?","description":"While Gear is preparing to launch its Canary Network, we are using Statemine to reward active community members with the Gear Bonus Token (GRB).","sidebar":"tutorialSidebar"},"idea/account/ss58":{"id":"idea/account/ss58","title":"SS58 Address Format","description":"SS58 is a simple address format designed for Substrate based chains. The basic idea is a base-58 encoded value which can identify a specific account on the Substrate chain. For more details about the format, please check https://docs.substrate.io/v3/advanced/ss58/.","sidebar":"tutorialSidebar"},"idea/idea-overview":{"id":"idea/idea-overview","title":"Gear IDEA online","description":"Gear IDEA is a convenient tool that\u2019s purpose is to familiarize users with the Gear platform. It provides smart-contract developers with the easiest and fastest way to write, compile, test and upload smart-contracts to a test network directly in their browser without additional configuration.","sidebar":"tutorialSidebar"},"idea/online-ide":{"id":"idea/online-ide","title":"Gear online Integrated Development Environment (IDE)","description":"Coming soon...","sidebar":"tutorialSidebar"},"intro":{"id":"intro","title":"Intro to Gear","description":"Welcome!","sidebar":"tutorialSidebar"},"node/backup-restore":{"id":"node/backup-restore","title":"Backup and restore the node","description":"Data structure","sidebar":"tutorialSidebar"},"node/dev-net":{"id":"node/dev-net","title":"Running Gear node in Dev Net mode","description":"Dev net is useful for development and debugging of your smart contracts. You can upload your program directly to a local node, send messages to a program and validate the program\'s logic.","sidebar":"tutorialSidebar"},"node/multi-node":{"id":"node/multi-node","title":"Creating a Multi-Node local testnet","description":"For more advanced smart contracts debugging and testing closer to the real network environment, you can build your local testnet that consists of several interconnected nodes. This mode allows to see the multi-node consensus algorithm in action.","sidebar":"tutorialSidebar"},"node/node-as-service":{"id":"node/node-as-service","title":"\u0421onfiguring a node as a Linux service","description":"Prerequisites","sidebar":"tutorialSidebar"},"node/node-faq":{"id":"node/node-faq","title":"Node FAQ","description":"Can I run the Gear node now?","sidebar":"tutorialSidebar"},"node/setting-up":{"id":"node/setting-up","title":"Setting Up Gear Node","description":"Introduction","sidebar":"tutorialSidebar"},"node/telemetry":{"id":"node/telemetry","title":"Sending Gear node telemetry","description":"The health of each Gear node and the entire network needs to be monitored to ensure truly decentralized and robust operations. This includes the various block production metrics as well as node uptime which is vital in PoS networks.","sidebar":"tutorialSidebar"},"node/troubleshooting":{"id":"node/troubleshooting","title":"Troubleshooting","description":"Typical errors and solutions are described here.","sidebar":"tutorialSidebar"}}}')}}]);